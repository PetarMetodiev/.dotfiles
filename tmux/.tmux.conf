# Very good tmux tutorial: https://thoughtbot.com/upcase/tmux
# Interesting tmux configuration: https://github.com/gpakosz/.tmux
# Comprehensive tutorial on tmux: https://leanpub.com/the-tao-of-tmux/read#config
# In order to show proper emojis, this font is needed - https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/Hasklig (brew cask install font-hasklig-nerd-font)
# 0 is too far from ` ;)
set -g base-index 1

# Pane numbering starts from 1, consistent with windows
setw -g pane-base-index 1

# renumber the windows if any of them is closed
set -g renumber-windows on

# Enable colors
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
# set -g default-terminal "tmux"
# set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# change shell to zsh
set-option -g default-shell /bin/zsh

# Rebind prefix key
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Remap space to :, simillar to vim
bind-key Space command-prompt

# Apply changes to .tmux.conf
bind r source-file ~/.tmux.conf

# Useful for scrolling, default was [
bind C-a copy-mode

set -g focus-events off
set -g escape-time 10

# Vim style bindings
set-window-option -g mode-keys vi
# Copy VIM style
bind-key -Tcopy-mode-vi v send -X begin-selection
bind-key -Tcopy-mode-vi y send -X copy-selection
bind-key -Tcopy-mode-vi Escape send -X cancel

# Switch between last used windows(similar to ctrl+tab in vs code)
bind-key C-q last-window

# Swap panes. First shows pane numbers for convenience
bind-key C-s display-panes\; command-prompt -p "Swap with pane No: " "swap-pane -t '%%'"

# Copied from http://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
# {
# Enable mouse control (clickable windows, panes, resizable panes)
set-option -g mouse on
set -g status-justify left
set -g status-interval 2

set -g status-position bottom
set -g status-style fg=colour137,bg=colour234,dim
# set -g status-left '#S'
# Remove the session name(the number on the left of the windows) as it is not currently utilized properly
set -g status-left '#S   '
set -g status-right '#[fg=cyan]#{?client_prefix,  ,} #[fg=colour226,bg=colour245,bold]   #{battery_percentage} #[fg=colour233,bg=colour249,bold] #(whoami) #[fg=colour233,bg=colour251,bold] %d.%m.%y #[fg=colour233,bg=colour255,bold] %H:%M '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#{?window_zoomed_flag, ﯫ,} '

setw -g window-status-style fg=colour138,bg=colour235,dim
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#{?window_last_flag, 凌,}#{?window_zoomed_flag, ﯫ,} '

# Change color of inactive pane
setw -g window-style "fg=default,bg=#2c2e38"
setw -g window-active-style "fg=default,bg=#101321"
# Change color of borders
set -g pane-active-border-style "fg=default,bg=#515865"
# setw -g pane-border-style "fg=#444444,bg=#444444"
setw -g pane-border-style "fg=#515865,bg=#515865"

setw -g window-status-bell-style fg=colour255,bg=colour1,bold

# }

# command/message line colors
set-option -g message-style fg=black,bg=white,bold

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# Some good initial configurations. Should not overwrite user defined settings.
set -g @plugin 'tmux-plugins/tmux-sensible'
# Easier panes management
set -g @plugin 'tmux-plugins/tmux-pain-control'
# Additional setting for mouse mode
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# Copy to the system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'
# Show battery data
set -g @plugin 'tmux-plugins/tmux-battery'
# Jump between vim splits and tmux panes with the same key combination - C-k,
# C-j, C-h, C-l
# Needs to be configured in .vimrc as well
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Restore clear screen with prefix C-l, needed since switching between tmux and vim panes is done using C-l
# If it is placed before plugin declaration, simply wont work.
bind C-l send-keys "C-l"
